CREATE USER ganyu IDENTIFIED BY ganyu;
GRANT ALL PRIVILEGES TO ganyu;

CREATE TABLE CLIENTE 
(
  ID_CLIENTE NUMBER NOT NULL 
, NOME VARCHAR2(30 BYTE) NOT NULL 
, CPF VARCHAR2(11 BYTE) NOT NULL 
, SEXO VARCHAR2(1 BYTE) NOT NULL 
, ANODENASCI VARCHAR2(4 BYTE) NOT NULL 
, CONSTRAINT ID_CLIENT_PK PRIMARY KEY 
  (
    ID_CLIENTE 
  )
  USING INDEX 
  (
      CREATE UNIQUE INDEX ID_CLIENT_PK ON CLIENTE (ID_CLIENTE ASC) 
      LOGGING 
      TABLESPACE SYSTEM 
      PCTFREE 10 
      INITRANS 2 
      STORAGE 
      ( 
        INITIAL 65536 
        NEXT 1048576 
        MINEXTENTS 1 
        MAXEXTENTS UNLIMITED 
        FREELISTS 1 
        FREELIST GROUPS 1 
        BUFFER_POOL DEFAULT 
      ) 
      NOPARALLEL 
  )
  ENABLE 
) 
LOGGING 
TABLESPACE SYSTEM 
PCTFREE 10 
PCTUSED 40 
INITRANS 1 
STORAGE 
( 
  INITIAL 65536 
  NEXT 1048576 
  MINEXTENTS 1 
  MAXEXTENTS UNLIMITED 
  FREELISTS 1 
  FREELIST GROUPS 1 
  BUFFER_POOL DEFAULT 
) 
NOPARALLEL;

CREATE TABLE CONTATO 
(
  ID_CONTATO NUMBER NOT NULL 
, EMAIL VARCHAR2(30 BYTE) NOT NULL 
, DDD VARCHAR2(2 BYTE) NOT NULL 
, NUMERO VARCHAR2(9 BYTE) NOT NULL 
, IDCLIENTE NUMBER NOT NULL 
, CONSTRAINT ID_CONTATO_PK PRIMARY KEY 
  (
    ID_CONTATO 
  )
  USING INDEX 
  (
      CREATE UNIQUE INDEX ID_CONTATO_PK ON CONTATO (ID_CONTATO ASC) 
      LOGGING 
      TABLESPACE SYSTEM 
      PCTFREE 10 
      INITRANS 2 
      STORAGE 
      ( 
        INITIAL 65536 
        NEXT 1048576 
        MINEXTENTS 1 
        MAXEXTENTS UNLIMITED 
        FREELISTS 1 
        FREELIST GROUPS 1 
        BUFFER_POOL DEFAULT 
      ) 
      NOPARALLEL 
  )
  ENABLE 
) 
LOGGING 
TABLESPACE SYSTEM 
PCTFREE 10 
PCTUSED 40 
INITRANS 1 
STORAGE 
( 
  INITIAL 65536 
  NEXT 1048576 
  MINEXTENTS 1 
  MAXEXTENTS UNLIMITED 
  FREELISTS 1 
  FREELIST GROUPS 1 
  BUFFER_POOL DEFAULT 
) 
NOPARALLEL;

ALTER TABLE CONTATO
ADD CONSTRAINT ID_CLIENTE_FK_C FOREIGN KEY
(
  IDCLIENTE 
)
REFERENCES CLIENTE
(
  ID_CLIENTE 
)
ENABLE;

CREATE TABLE ENDERECO 
(
  ID_ENDERECO NUMBER NOT NULL 
, CEP VARCHAR2(15 BYTE) NOT NULL 
, RUA VARCHAR2(15 BYTE) NOT NULL 
, NUMERO VARCHAR2(15 BYTE) NOT NULL 
, BAIRO VARCHAR2(15 BYTE) NOT NULL 
, CIDADE VARCHAR2(15 BYTE) NOT NULL 
, ESTADO VARCHAR2(15 BYTE) NOT NULL 
, IDCLIENTE NUMBER NOT NULL 
, CONSTRAINT ID_ENDERECO_PK PRIMARY KEY 
  (
    ID_ENDERECO 
  )
  USING INDEX 
  (
      CREATE UNIQUE INDEX ID_ENDERECO_PK ON ENDERECO (ID_ENDERECO ASC) 
      LOGGING 
      TABLESPACE SYSTEM 
      PCTFREE 10 
      INITRANS 2 
      STORAGE 
      ( 
        INITIAL 65536 
        NEXT 1048576 
        MINEXTENTS 1 
        MAXEXTENTS UNLIMITED 
        FREELISTS 1 
        FREELIST GROUPS 1 
        BUFFER_POOL DEFAULT 
      ) 
      NOPARALLEL 
  )
  ENABLE 
) 
LOGGING 
TABLESPACE SYSTEM 
PCTFREE 10 
PCTUSED 40 
INITRANS 1 
STORAGE 
( 
  INITIAL 65536 
  NEXT 1048576 
  MINEXTENTS 1 
  MAXEXTENTS UNLIMITED 
  FREELISTS 1 
  FREELIST GROUPS 1 
  BUFFER_POOL DEFAULT 
) 
NOPARALLEL;

ALTER TABLE ENDERECO
ADD CONSTRAINT ID_CLIENTE_FK_E FOREIGN KEY
(
  IDCLIENTE 
)
REFERENCES CLIENTE
(
  ID_CLIENTE 
)
ENABLE;

CREATE SEQUENCE S_ID_CLIENTE INCREMENT BY 1 MAXVALUE 9999999999999999999999999999 MINVALUE 1 NOCACHE;
CREATE SEQUENCE S_ID_CONTATO INCREMENT BY 1 MAXVALUE 9999999999999999999999999999 MINVALUE 1 NOCACHE;
CREATE SEQUENCE S_ID_ENDERECO INCREMENT BY 1 MAXVALUE 9999999999999999999999999999 MINVALUE 1 NOCACHE;

create or replace TRIGGER T_ID_CLIENTE
BEFORE INSERT ON CLIENTE
   FOR EACH ROW 
BEGIN

   IF INSERTING THEN 
	  IF  :NEW.ID_CLIENTE  IS NULL  THEN 
		 SELECT S_ID_CLIENTE.NEXTVAL  INTO  :NEW.ID_CLIENTE  FROM  DUAL; 
	  END IF; 
   END IF; 

END;
create or replace TRIGGER T_ID_CONTATO
BEFORE INSERT ON CONTATO
   FOR EACH ROW 
BEGIN

   IF INSERTING THEN 
	  IF  :NEW.ID_CONTATO  IS NULL  THEN 
		 SELECT S_ID_CONTATO.NEXTVAL  INTO  :NEW.ID_CONTATO  FROM  DUAL; 
	  END IF; 
   END IF; 

END;
create or replace TRIGGER T_ID_ENDERECO
BEFORE INSERT ON ENDERECO
   FOR EACH ROW 
BEGIN

   IF INSERTING THEN 
	  IF  :NEW.ID_ENDERECO  IS NULL  THEN 
		 SELECT S_ID_ENDERECO.NEXTVAL  INTO  :NEW.ID_ENDERECO  FROM  DUAL; 
	  END IF; 
   END IF; 

END;